1. в лдаваскрипте все переменные можно условно разделить на два типа:
    - локальные - переменные определенные внутри какой-то фунцкции или блока кода - тоесть доступные только внутри функции или блока кода
    - глобальные - переменные которые не находятся внутри функции или блока кода - тоесть доступные везде.

2/3  все шлобальные переменные(созданые с помоштю var или FD) являются свойствами или методами глобального обьекта или подругому это(object environment record), в браузере таким шлобальным обектом является window.
 поэтому когда мы пишем highFive или myBestFunc, это все равно что написать window.highFive = 5;.

4. но оьращаю ваше внимание что так работает только при инициализации переменной с помощтю кейворда var. при использовании let или const
создается блочная переменная которая не является свойством глобального обекта, но является частью declarative environment.

5. давайте еще раз вспомним как работает хоистинг. хоистинг возможет потому что скрипт исполняется в две фазы.
    1. чтение скрипта - инициальзиция переменных.
    2. исполнение скрипта.

6. отлично для глобальной области видимости все выглядит просто. а как это работает в локальной области видимости
 в локальной области видимости - тоесть внетри какойто функции, все работает точно также. только вместо глобального обекта используется локальный обект - LexicalEnvironment

7. в момент исполнения функции создается обект - LexicalEnvironment - своиства которого это аргументы функции и переменные функции.

8. отлично но как работают глобальные и локальные переменные вместе? сначала джаваскрипт екзекютор поизет свойтво в LexicalEnvironment, но ф асли там не будет такого проперти то

9. Согласно спецификации, каждая фенкция при создании имеет скрытое свойство [[Scope]] который является ссылкой на композицию обектов declarative environment и object environment. после поиска свойства в LexicalEnvironment екзекютор поищет свойство [[Scope]]


